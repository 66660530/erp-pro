<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.dao.PurchaseOrderDao">

    <select id="queryPurchaseOrderToList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
			a.id,
			a.default_number defaultNumber,
			CONVERT (a.oper_time, char) operTime,
			a.oper_person_name operPersonName,
			b.supplier supplierName,
			FORMAT(a.total_price, 2) totalPrice,
			a.status,
			GROUP_CONCAT(DISTINCT CONCAT(c.material_name, c.material_model) SEPARATOR ',') materialNames
		FROM
			erp_depothead a
			LEFT JOIN erp_supplier b ON a.organ_id = b.id
			LEFT JOIN erp_depotitem c ON c.header_id = a.id
		WHERE
			a.sub_type = '10'
		AND a.tenant_id = #{userId}
		AND a.delete_flag = '0'
        <if test="material != '' and material != null">
            AND c.material_name LIKE '%${material}%'
        </if>
        <if test="defaultNumber != '' and defaultNumber != null">
            AND a.default_number LIKE '%${defaultNumber}%'
        </if>
        <if test="startTime != '' and startTime != null and endTime != '' and endTime != null">
			AND a.oper_time >= #{startTime} AND #{endTime} >= a.oper_time
		</if>
        GROUP BY a.id
        ORDER BY a.create_time DESC
    </select>
    
    <select id="queryMaterialsById" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id materialId,
			a.`name` materialName,
			a.model materialModel,
			b.id mUnitId,
			IFNULL(c.`name`, a.unit_name) unitName,
			IFNULL(c.number, '1') baseNumber,
			#{depotId} depotId
		FROM
			erp_material a,
			erp_material_norms b
			LEFT JOIN erp_unit c ON b.unit_id = c.id
		WHERE
			a.id = b.meterial_id
		AND b.id = #{mUnitId}
		AND a.id = b.meterial_id
		AND a.delete_flag = '0'
		AND b.delete_flag = '0'
    </select>
    
    <insert id="insertPurchaseOrderMation" parameterType="java.util.Map">
        INSERT into erp_depothead
        (id, `type`, sub_type, default_number, number, oper_person_id, oper_person_name, create_time, oper_time, organ_id, account_id, total_price,
        	pay_type, remark, status, tenant_id, delete_flag)
        VALUES(#{id}, #{type}, #{subType}, #{defaultNumber}, #{number}, #{operPersonId}, #{operPersonName}, #{createTime}, #{operTime}, #{organId}, #{accountId}, #{totalPrice},
        		#{payType}, #{remark}, #{status}, #{userId}, #{deleteFlag})
    </insert>
    
    <insert id="insertPurchaseOrderChildMation" parameterType="java.util.Map">
	     INSERT INTO erp_depotitem
	     (id, header_id, material_id, material_name, material_model, m_unit_id, oper_number, basic_number, unit_price, all_price, remark, depot_id,
	     	m_type, tenant_id, delete_flag)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.headerId}, #{item.materialId}, #{item.materialName}, #{item.materialModel}, #{item.mUnitId}, #{item.operNumber}, #{item.baseNumber}, #{item.estimatePurchasePrice}, #{item.allPrice}, #{item.remark}, #{item.depotId},
				#{item.mType}, #{item.userId}, #{item.deleteFlag})  
		</foreach>  
	</insert>
	
	<select id="queryPurchaseOrderStateById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.`status`
		FROM
			erp_depothead a
		WHERE
			a.id = #{id}
		AND a.tenant_id = #{userId}
		AND a.delete_flag = '0'
		AND a.sub_type = '10' <!-- 限制采购单 -->
	</select>
	
	<delete id="deletePurchaseOrderMationById" parameterType="java.util.Map">
		DELETE
		FROM
			erp_depothead
		WHERE
			id = #{id}
		AND (status = '0' OR status = '3')
	</delete>
	
	<delete id="deletePurchaseOrderNormsMationById" parameterType="java.util.Map">
		DELETE
		FROM
			erp_depotitem
		WHERE
			header_id = #{id}
	</delete>
	
	<select id="queryPurchaseOrderToEditById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.organ_id supplierId,
			CONVERT (a.oper_time, char) operTime,
			a.account_id accountId,
			CONVERT(a.total_price, decimal(24, 2)) totalPrice,
			a.pay_type payType,
			a.remark
		FROM
			erp_depothead a
		WHERE
			a.id = #{id}
		AND (a.`status` = '0' OR a.`status` = '3')
		AND a.delete_flag = '0'
		AND a.tenant_id = #{userId}
		AND a.sub_type = '10'
	</select>
	
	<select id="queryPurchaseOrderNormsToEditById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.depot_id depotId,
			a.material_id materialId,
			a.m_unit_id mUnitId,
			IFNULL(SUM(b.oper_number * (CASE c.sub_type 
									WHEN 10 THEN 0 
									ELSE CASE c.type WHEN 2 THEN 1 ELSE -1 END
								END)), 0) currentTock,
			a.oper_number operNum,
			CONVERT(a.unit_price, decimal(24, 2)) unitPrice,
			CONVERT(a.all_price, decimal(24, 2)) allPrice,
			a.remark
		FROM
			erp_depotitem a
			LEFT JOIN erp_depotitem b ON b.depot_id = a.depot_id AND b.m_unit_id = a.m_unit_id AND b.header_id != a.header_id
			LEFT JOIN erp_depothead c ON c.id = b.header_id
		WHERE
			a.header_id = #{id}
		AND a.delete_flag = '0'
		GROUP BY a.id
	</select>
	
	<update id="editPurchaseOrderMationById" parameterType="java.util.Map">
		UPDATE erp_depothead
		<set>
			<if test="operTime != '' and operTime != null">
	            oper_time = #{operTime},
	        </if>
	        <if test="organId != '' and organId != null">
	            organ_id = #{organId},
	        </if>
            account_id = #{accountId},
            remark = #{remark},
	        <if test="payType != '' and payType != null">
	            pay_type = #{payType},
	        </if>
	        <if test="totalPrice != '' and totalPrice != null">
	            total_price = #{totalPrice},
	        </if>
		</set>
		WHERE id = #{id}
		AND tenant_id = #{userId}
		AND sub_type = '10'
	</update>
	
	<update id="editPurchaseOrderStateToSubExamineById" parameterType="java.util.Map">
		UPDATE erp_depothead
		<set>
            `status` = '1'
		</set>
		WHERE id = #{id}
		AND tenant_id = #{userId}
		AND sub_type = '10'
	</update>
	
	<update id="editPurchaseOrderStateToExamineById" parameterType="java.util.Map">
		UPDATE erp_depothead
		<set>
            `status` = #{status},
            status_content = #{content}
		</set>
		WHERE id = #{id}
		AND tenant_id = #{userId}
		AND sub_type = '10'
	</update>
	
	<select id="queryPurchaseOrderToTurnPutById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.default_number defaultNumber,
			a.organ_id organId,
			a.account_id accountId,
			CONVERT(a.total_price, decimal(24, 2)) totalPrice,
			a.pay_type payType,
			CONVERT(IFNULL(a.change_amount, a.total_price), decimal(24, 2)) changeAmount,
			CONVERT(IFNULL(a.discount, 0), decimal(24, 2)) discount,
			CONVERT(IFNULL(a.discount_money, 0), decimal(24, 2)) discountMoney,
			CONVERT(IFNULL(a.discount_last_money, total_price), decimal(24, 2)) discountLastMoney,
			CONVERT(IFNULL(a.other_money, 0), decimal(24, 2)) otherMoney,
			CONVERT((IFNULL(a.discount_money, a.total_price) + IFNULL(a.discount_last_money, 0)), decimal(24, 2)) taxLastMoneyPrice,
			<!-- 优惠后金额 - 本次付款金额 -->
			CONVERT((IFNULL(a.discount_last_money, a.total_price) - IFNULL(a.change_amount, a.total_price)), decimal(24, 2)) arrears,
			a.other_money_list otherMoneyList,
			a.tenant_id userId,
			a.remark
		FROM
			erp_depothead a
		WHERE
			a.id = #{id}
		AND (a.`status` = '2' OR a.`status` = '4')
		AND a.delete_flag = '0'
		AND a.tenant_id = #{userId}
		AND a.sub_type = '10'
	</select>
	
	<select id="queryPurchaseOrderNormsToTurnPutById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.depot_id depotId,
			a.material_id materialId,
			a.m_unit_id mUnitId,
			SUM(b.oper_number * (CASE c.type WHEN 2 THEN 1 ELSE -1 END)) AS currentTock,
			a.oper_number - (
				SELECT
					SUM(m.oper_number)
				FROM
					erp_depothead k,
					erp_depotitem m
				WHERE
					k.id = m.header_id
				AND k.link_number = #{defaultNumber}
				AND k.id != a.id
				AND k.tenant_id = #{userId}
				AND m.m_unit_id = a.m_unit_id
				AND k.delete_flag = '0'
				GROUP BY
					k.link_number
			) nowNumber,
			CONVERT(a.unit_price, decimal(24, 2)) unitPrice,
			CONVERT(a.all_price, decimal(24, 2)) allPrice,
			CONVERT(IFNULL(a.tax_unit_price, 0), decimal(24, 2)) taxUnitPrice,
			CONVERT(IFNULL(a.tax_rate, 0), decimal(24, 2)) taxRate,
			CONVERT(IFNULL(a.tax_money, 0), decimal(24, 2)) taxMoney,
			CONVERT(IFNULL(a.tax_last_money, a.all_price), decimal(24, 2)) taxLastMoney,
			a.remark
		FROM
			erp_depotitem a
			LEFT JOIN (
				SELECT
					q.header_id,
					q.oper_number,
					q.m_unit_id,
					q.depot_id
				FROM
					erp_depothead p,
					erp_depotitem q
				WHERE
					p.id = q.header_id
				AND p.sub_type != '10'
				AND p.tenant_id = #{userId}
			) AS b ON b.header_id != a.header_id AND b.depot_id = a.depot_id AND b.m_unit_id = a.m_unit_id
			LEFT JOIN erp_depothead c ON c.id = b.header_id
		WHERE
			a.header_id = #{id}
		AND a.delete_flag = '0'
		GROUP BY a.id
	</select>
	
	<insert id="insertPurchasePutMation" parameterType="java.util.Map">
        INSERT into erp_depothead
        (id, `type`, sub_type, default_number, number, oper_person_id, oper_person_name, create_time, oper_time, organ_id, account_id, total_price,
        	pay_type, remark, status, tenant_id, delete_flag,
        	discount, discount_money, discount_last_money, other_money, other_money_list, change_amount, link_number)
        VALUES(#{id}, #{type}, #{subType}, #{defaultNumber}, #{number}, #{operPersonId}, #{operPersonName}, #{createTime}, #{operTime}, #{organId}, #{accountId}, #{totalPrice},
        		#{payType}, #{remark}, #{status}, #{userId}, #{deleteFlag},
        		#{discount}, #{discountMoney}, #{discountLastMoney}, #{otherMoney}, #{otherMoneyList}, #{changeAmount}, #{linkNumber})
    </insert>
    
    <insert id="insertPurchasePutChildMation" parameterType="java.util.Map">
	     INSERT INTO erp_depotitem
	     (id, header_id, material_id, material_name, material_model, m_unit_id, oper_number, basic_number, unit_price, all_price, remark, depot_id,
	     	m_type, tenant_id, delete_flag,
	     	tax_unit_price, tax_rate, tax_money, tax_last_money)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.headerId}, #{item.materialId}, #{item.materialName}, #{item.materialModel}, #{item.mUnitId}, #{item.operNumber}, #{item.baseNumber}, #{item.estimatePurchasePrice}, #{item.allPrice}, #{item.remark}, #{item.depotId},
				#{item.mType}, #{item.userId}, #{item.deleteFlag},
				#{item.taxUnitPrice}, #{item.taxRate}, #{item.taxMoney}, #{item.taxLastMoney})  
		</foreach>  
	</insert>
	
	<select id="queryOrderIsStandardById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			b.oper_number - (
				SELECT
					SUM(d.oper_number)
				FROM
					erp_depothead c,
					erp_depotitem d
				WHERE
					c.id = d.header_id
				AND c.link_number = a.default_number
				AND c.id != #{cgddId}
				AND c.tenant_id = #{userId}
				AND d.m_unit_id = #{mUnitId}
				AND c.delete_flag = '0'
				GROUP BY
					c.link_number
			) nowNum
		FROM
			erp_depothead a,
			erp_depotitem b
		WHERE
			a.id = #{cgddId}
		AND a.id = b.header_id
		AND a.tenant_id = #{userId}
		AND b.m_unit_id = #{mUnitId}
		AND a.delete_flag = '0'
	</select>
	
	<update id="editPurchaseOrderStateToTurnById" parameterType="java.util.Map">
		UPDATE erp_depothead
		<set>
            `status` = '4'
		</set>
		WHERE id = #{id}
		AND tenant_id = #{userId}
		AND sub_type = '10'
	</update>
	
</mapper>