<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.dao.MaterialDao">

    <select id="queryMaterialListByUserId" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
			a.id,
			a.`name`,
			a.model,
			b.`name` firstTypeName,
			c.`name` secondTypeName,
			a.enabled,
			CONVERT (a.create_time, CHAR) createTime
		FROM
			erp_material a
			LEFT JOIN erp_material_category b ON a.category_id = b.id
			LEFT JOIN erp_material_category c ON a.category_id_sec = c.id
		WHERE
			a.delete_flag = '0'
        AND a.tenant_id = #{userId}
        <if test="categoryId != '' and categoryId != null">
            AND a.category_id = #{categoryId}
        </if>
        <if test="categoryIdSec != '' and categoryIdSec != null">
            AND a.category_id_sec = #{categoryIdSec}
        </if>
        <if test="materialName != '' and materialName != null">
            AND a.`name` LIKE '%${materialName}%'
        </if>
        <if test="enabled != '' and enabled != null">
            AND a.enabled = #{enabled}
        </if>
        <if test="model != '' and model != null">
            AND a.model LIKE '%${model}%'
        </if>
        ORDER BY a.create_time DESC
    </select>
    
    <select id="queryMaterialUnitListToSelectByUserId" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id,
			CONCAT(a.`name`, '-----', CONCAT(GROUP_CONCAT(b.`name` ORDER BY b.number ASC), '(', GROUP_CONCAT(b.number ORDER BY b.number ASC separator ':') ,')')) `name`
		FROM
			erp_unit_group a
			LEFT JOIN erp_unit b ON b.group_id = a.id AND b.delete_flag = '0'
		WHERE a.tenant_id = #{userId}
		AND a.delete_flag = '0'
		GROUP BY a.id
    </select>
    
    <select id="queryMaterialUnitById" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id,
			a.`name`,
			a.base_unit baseUnit
		FROM
			erp_unit a
		WHERE
			a.group_id = #{id}
		AND a.delete_flag = '0'
		ORDER BY a.number
    </select>
    
    <select id="queryMaterialUnitByUnitId" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id,
			a.`name`,
			a.base_unit baseUnit
		FROM
			erp_unit a
		WHERE
			a.id = #{unitId}
		AND a.delete_flag = '0'
    </select>
    
    <select id="queryMaterialByNameAndModel" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id
		FROM
			erp_material a
		WHERE
			a.tenant_id = #{tenantId}
		AND a.delete_flag = '0'
		AND a.`name` = #{materialName}
		AND a.model = #{model}
    </select>
    
    <insert id="insertMaterialNorms" parameterType="java.util.Map">
	     insert into erp_material_norms 
	     (id, meterial_id, safety_tock, retail_price, low_price, estimate_purchase_price, sale_price, delete_flag, create_time)
	     values(#{id}, #{materialId}, #{safetyTock}, #{retailPrice}, #{lowPrice}, #{estimatePurchasePrice}, #{salePrice}, #{deleteFlag}, #{createTime})
	</insert>
	
	<insert id="insertMaterialNormsList" parameterType="java.util.Map">
	     insert into erp_material_norms
	     (id, meterial_id, unit_id, safety_tock, retail_price, low_price, estimate_purchase_price, sale_price, delete_flag, create_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.materialId}, #{item.unitId}, #{item.safetyTock}, #{item.retailPrice}, #{item.lowPrice}, #{item.estimatePurchasePrice}, #{item.salePrice}, #{item.deleteFlag}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<insert id="insertMaterialMation" parameterType="java.util.Map">
	     insert into erp_material 
	     (id, category_id, category_id_sec, `name`, model, remark, unit, unit_name, unit_group_id, first_out_unit, first_in_unit, enabled, tenant_id, delete_flag, create_time)
	     values(#{id}, #{categoryId}, #{categoryIdSec}, #{materialName}, #{model}, #{remark}, #{unit}, #{unitName}, #{unitGroupId}, #{firstOutUnit}, #{firstInUnit}, #{enabled}, #{tenantId}, #{deleteFlag}, #{createTime})
	</insert>
	
	<select id="queryMaterialEnabledByIdAndUserId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.enabled
		FROM
			erp_material a
		WHERE
			a.id = #{id}
		AND a.tenant_id = #{userId}
		AND delete_flag = '0'
	</select>
	
	<update id="editMaterialEnabledToDisablesById" parameterType="java.util.Map">
		UPDATE erp_material
		<set>
			enabled = '0'
		</set>
		WHERE id = #{id}
		AND tenant_id = #{userId}
	</update>
	
	<update id="editMaterialEnabledToEnablesById" parameterType="java.util.Map">
		UPDATE erp_material
		<set>
			enabled = '1'
		</set>
		WHERE id = #{id}
		AND tenant_id = #{userId}
	</update>
	
	<select id="queryMaterialDeleteFlagByIdAndUserId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.delete_flag deleteFlag
		FROM
			erp_material a
		WHERE
			a.id = #{id}
		AND a.tenant_id = #{userId}
		AND delete_flag = '0'
	</select>
	
	<update id="deleteMaterialMationById" parameterType="java.util.Map">
		UPDATE erp_material
		<set>
			delete_flag = '1'
		</set>
		WHERE id = #{id}
		AND tenant_id = #{userId}
		AND delete_flag = '0'
	</update>
	
	<update id="deleteMaterialNormsMationById" parameterType="java.util.Map">
		UPDATE erp_material_norms
		<set>
			delete_flag = '1'
		</set>
		WHERE meterial_id = #{id}
		AND delete_flag = '0'
	</update>
	
	<select id="queryMaterialMationDetailsById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.`name` materialName,
			b.`name` categoryName,
			c.`name` categorySecName,
			a.model,
			a.remark,
			a.unit,
			CASE a.unit WHEN '1' THEN '非多单位' WHEN '2' THEN '多单位' ELSE '' END unitType,
			a.unit_name unitName,
			CONCAT(g.`name`, '-----', CONCAT(GROUP_CONCAT(f.`name` ORDER BY f.number ASC), '(', GROUP_CONCAT(f.number ORDER BY f.number ASC separator ':') ,')')) unitGroupName,
			d.`name` firstInUnit,
			e.`name` firstOutUnit,
			CASE a.enabled WHEN '0' THEN '禁用' WHEN '1' THEN '启用' ELSE '' END enabled,
			CONVERT (a.create_time, CHAR) createTime
		FROM
			erp_material a
			LEFT JOIN erp_material_category b ON a.category_id = b.id
			LEFT JOIN erp_material_category c ON a.category_id_sec = c.id
			LEFT JOIN erp_unit d ON a.first_in_unit = d.id
			LEFT JOIN erp_unit e ON a.first_out_unit = e.id
			LEFT JOIN erp_unit f ON f.group_id = a.unit_group_id
			LEFT JOIN erp_unit_group g ON g.id = a.unit_group_id
		WHERE
			a.id = #{id}
		AND a.tenant_id = #{userId}
		AND a.delete_flag = '0'
	</select>
	
	<select id="queryMaterialNormsMationDetailsById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			b.`name` unitName,
			CASE b.base_unit WHEN '1' THEN '基础单位' WHEN '2' THEN '副单位' ELSE '' END baseUnit,
			IFNULL(a.safety_tock, 0) safetyTock,
			FORMAT(a.retail_price, 2) retailPrice,
			FORMAT(a.low_price, 2) lowPrice,
			FORMAT(a.estimate_purchase_price, 2) estimatePurchasePrice,
			FORMAT(a.sale_price, 2) salePrice,
			IFNULL(SUM(c.oper_number * (CASE d.sub_type 
									WHEN 10 THEN 0 
									WHEN 11 THEN 0 
									ELSE CASE d.type WHEN 2 THEN 1 ELSE -1 END
								END)), 0) currentTock
		FROM
			erp_material_norms a
			LEFT JOIN erp_unit b ON a.unit_id = b.id
			LEFT JOIN erp_depotitem c ON a.id = c.m_unit_id AND c.delete_flag = '0'
			LEFT JOIN erp_depothead d ON c.header_id = d.id
		WHERE
			a.meterial_id = #{id}
		AND a.delete_flag = '0'
		GROUP BY a.id
		ORDER BY b.number ASC
	</select>
	
	<select id="queryMaterialMationToEditById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.`name` materialName,
			a.category_id categoryId,
			a.category_id_sec categoryIdSec,
			a.model,
			a.remark,
			a.unit,
			a.unit_name unitName,
			a.unit_group_id unitGroupId,
			a.first_in_unit firstInUnit,
			a.first_out_unit firstOutUnit
		FROM
			erp_material a
		WHERE
			a.id = #{id}
		AND a.tenant_id = #{userId}
		AND a.delete_flag = '0'
	</select>
	
	<select id="queryMaterialNormsMationToEditById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.unit_id unitId,
			b.`name` unitName,
			CASE b.base_unit WHEN '1' THEN '基础单位' WHEN '2' THEN '副单位' ELSE '' END baseUnit,
			a.safety_tock safetyTock,
			CONVERT(a.retail_price, decimal) retailPrice,
			CONVERT(a.low_price, decimal) lowPrice,
			CONVERT(a.estimate_purchase_price, decimal) estimatePurchasePrice,
			CONVERT(a.sale_price, decimal) salePrice
		FROM
			erp_material_norms a
			LEFT JOIN erp_unit b ON a.unit_id = b.id
		WHERE
			a.meterial_id = #{id}
		AND a.delete_flag = '0'
		ORDER BY b.number ASC
	</select>
	
	<select id="queryMaterialByNameAndModelAndId" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id
		FROM
			erp_material a
		WHERE
			a.tenant_id = #{userId}
		AND a.delete_flag = '0'
		AND a.`name` = #{materialName}
		AND a.model = #{model}
		AND a.id != #{id}
    </select>
    
    <update id="editMaterialMationById" parameterType="java.util.Map">
		UPDATE erp_material
		<set>
			<if test="materialName != '' and materialName != null">
	            `name` = #{materialName},
	        </if>
			<if test="categoryId != '' and categoryId != null">
	            category_id = #{categoryId},
	        </if>
	        <if test="categoryIdSec != '' and categoryIdSec != null">
	            category_id_sec = #{categoryIdSec},
	        </if>
			<if test="model != '' and model != null">
	            model = #{model},
	        </if>
	        remark = #{remark},
	        <if test="unit != '' and unit != null">
	            unit = #{unit},
	        </if>
            unit_name = #{unitName},
            unit_group_id = #{unitGroupId},
            first_in_unit = #{firstInUnit},
            first_out_unit = #{firstOutUnit},
		</set>
		WHERE id = #{id}
		AND tenant_id = #{userId}
	</update>
	
	<select id="queryMaterialById" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id,
			a.unit,
			a.unit_name unitName,
			a.unit_group_id unitGroupId
		FROM
			erp_material a
		WHERE
			a.id = #{id}
		AND a.tenant_id = #{userId}
		AND a.delete_flag = '0'
    </select>
    
    <select id="queryMaterialNormsById" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id,
			a.unit_id unitId
		FROM
			erp_material_norms a
		WHERE
			a.meterial_id = #{id}
		AND a.delete_flag = '0'
    </select>
    
    <update id="editMaterialNormsById" parameterType="java.util.Map">
		UPDATE erp_material_norms
		<set>
			<if test="safetyTock != '' and safetyTock != null">
	            safety_tock = #{safetyTock},
	        </if>
			<if test="retailPrice != '' and retailPrice != null">
	            retail_price = #{retailPrice},
	        </if>
	        <if test="lowPrice != '' and lowPrice != null">
	            low_price = #{lowPrice},
	        </if>
			<if test="estimatePurchasePrice != '' and estimatePurchasePrice != null">
	            estimate_purchase_price = #{estimatePurchasePrice},
	        </if>
	        <if test="salePrice != '' and salePrice != null">
	            sale_price = #{salePrice},
	        </if>
	        unit_id = #{unitId}
		</set>
		WHERE id = #{id}
		AND delete_flag = '0'
	</update>
	
	<select id="queryMaterialListToSelect" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id,
			CONCAT(a.`name`, '(', a.model, ')') `name`,
			a.unit,
			a.unit_name unitName,
			a.first_in_unit firstInUnit,
			a.first_out_unit firstOutUnit
		FROM
			erp_material a
		WHERE
			a.delete_flag = '0'
		AND a.tenant_id = #{userId}
		AND a.enabled = '1'
    </select>
    
    <select id="queryMaterialUnitByIdToSelect" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id,
			b.`name`,
			CONVERT(a.estimate_purchase_price, decimal) estimatePurchasePrice,
			CONVERT(a.retail_price, decimal) retailPrice,
			CONVERT(a.sale_price, decimal) salePrice,
			a.unit_id unitId
		FROM
			erp_material_norms a
			LEFT JOIN erp_unit b ON a.unit_id = b.id
		WHERE
			a.meterial_id = #{id}
		AND a.delete_flag = '0'
		ORDER BY b.number ASC
    </select>
    
    <select id="queryMaterialTockByNormsIdAndDepotId" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			SUM(a.oper_number * (CASE b.type WHEN 2 THEN 1 ELSE -1 END)) AS currentTock
		FROM
			erp_depotitem a,
			erp_depothead b
		WHERE
			a.tenant_id = #{userId}
		AND a.depot_id = #{depotId}
		AND a.m_unit_id = #{mUnitId}
		AND a.header_id = b.id
		AND b.sub_type != '10'
		AND b.sub_type != '11'
		GROUP BY a.m_unit_id
    </select>
    
    <select id="queryMaterialDepotItemByNormsId" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			b.id,
			b.default_number defaultNumber,
			a.oper_number operNumber,
			b.type,
			a.unit_price unitPrice,
			b.link_number linkNumber,
			b.status,
			b.sub_type subType,
			CONVERT(IFNULL(a.tax_last_money, a.all_price), decimal(24, 2)) taxLastMoney,
			CONVERT (b.oper_time, CHAR) operTime,
			c.supplier supplierName
		FROM
			erp_depotitem a,
			erp_depothead b
			LEFT JOIN erp_supplier c ON b.organ_id = c.id
		WHERE
			a.m_unit_id = #{mUnitId}
		AND a.tenant_id = #{userId}
		AND a.delete_flag = '0'
		AND b.sub_type != '10'
		AND b.sub_type != '11'
		AND a.header_id = b.id 
		AND b.delete_flag = '0'
		ORDER BY b.oper_time DESC, a.id
    </select>

</mapper>